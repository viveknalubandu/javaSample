name: devops_tests
on:
   push:
    branches: ["main"]
 
jobs:
  helloWorld1:
    name: helloWorld1
    runs-on: ubuntu-latest 
    steps: 
      - name: 1step
        run: echo "Hello World!"
  helloWorld2:
    name: helloWorld2
    needs: helloWorld1
    runs-on: ubuntu-latest
    steps:
      - name: 1step
        run: echo "Hello World!"
  ServiceNowDevOpsChange:
    needs: helloWorld2
    runs-on: ubuntu-latest
    name: ServiceNow DevOps Change
    steps:
        - name: ServiceNow DevOps Change
          uses: ServiceNow/servicenow-devops-change@v5.1.0
          with:
              devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
              instance-url: ${{ secrets.SN_INSTANCE_URL }}
              tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
              context-github: ${{ toJSON(github) }}
              job-name: 'ServiceNow DevOps Change'
              change-request: '{"setCloseCode":"true","attributes":{"short_description":"Terraform Deploy","description":"Terraform Deploy","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
              interval: '100'
              timeout: '3600'
              changeCreationTimeOut: '3600'
              abortOnChangeCreationFailure: true
              abortOnChangeStepTimeout: true
        - name: Output of Change Creation
          run: echo "change-request-number = ${{ steps.create.outputs.change-request-number }}" >> $GITHUB_OUTPUT
  Deploy:
   name: Deploy
   needs: ServiceNowDevOpsChange
   runs-on: ubuntu-latest
   steps:
      - name: ServiceNow DevOps deploy
        run: echo deployed
